(
{:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set
      [{:node-type :field, :field-name "id"}
       {:node-type :field, :field-name "name"}
       {:node-type :field,
        :field-name "profilePic",
        :arguments
        [{:node-type :argument, :argument-name "width", :value 100}
         {:node-type :argument,
          :argument-name "height",
          :value 50.0}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set
      [{:node-type :field, :field-name "id"}
       {:node-type :field, :field-name "name"}
       {:node-type :field,
        :field-name "profilePic",
        :arguments
        [{:node-type :argument, :argument-name "width", :value 100}
         {:node-type :argument,
          :argument-name "height",
          :value 50}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set [{:node-type :field, :field-name "name"}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "mutation"},
    :selection-set
    [{:node-type :field,
      :field-name "likeStory",
      :arguments
      [{:node-type :argument, :argument-name "storyID", :value 12345}],
      :selection-set
      [{:node-type :field,
        :field-name "story",
        :selection-set
        [{:node-type :field, :field-name "likeCount"}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :field-name "me",
      :selection-set
      [{:node-type :field, :field-name "id"}
       {:node-type :field, :field-name "firstName"}
       {:node-type :field, :field-name "lastName"}
       {:node-type :field,
        :field-name "birthday",
        :selection-set
        [{:node-type :field, :field-name "month"}
         {:node-type :field, :field-name "day"}]}
       {:node-type :field,
        :field-name "friends",
        :selection-set [{:node-type :field, :field-name "name"}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :field-name "me",
      :selection-set [{:node-type :field, :field-name "name"}]}]}]} 
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set [{:node-type :field, :field-name "name"}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set
      [{:node-type :field, :field-name "id"}
       {:node-type :field, :field-name "name"}
       {:node-type :field,
        :field-name "profilePic",
        :arguments
        [{:node-type :argument,
          :argument-name "size",
          :value 100}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set
      [{:node-type :field, :field-name "id"}
       {:node-type :field, :field-name "name"}
       {:node-type :field,
        :field-name "profilePic",
        :arguments
        [{:node-type :argument, :argument-name "width", :value 100}
         {:node-type :argument,
          :argument-name "height",
          :value 50}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set
      [{:node-type :field, :field-name "id"}
       {:node-type :field, :field-name "name"}
       {:node-type :field,
        :name "smallPic",
        :field-name "profilePic",
        :arguments
        [{:node-type :argument, :argument-name "size", :value 64}]}
       {:node-type :field,
        :name "bigPic",
        :field-name "profilePic",
        :arguments
        [{:node-type :argument,
          :argument-name "size",
          :value 1024}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :name "zuck",
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set
      [{:node-type :field, :field-name "id"}
       {:node-type :field, :field-name "name"}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "noFragments"},
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set
      [{:node-type :field,
        :field-name "friends",
        :arguments
        [{:node-type :argument, :argument-name "first", :value 10}],
        :selection-set
        [{:node-type :field, :field-name "id"}
         {:node-type :field, :field-name "name"}
         {:node-type :field,
          :field-name "profilePic",
          :arguments
          [{:node-type :argument, :argument-name "size", :value 50}]}]}
       {:node-type :field,
        :field-name "mutualFriends",
        :arguments
        [{:node-type :argument, :argument-name "first", :value 10}],
        :selection-set
        [{:node-type :field, :field-name "id"}
         {:node-type :field, :field-name "name"}
         {:node-type :field,
          :field-name "profilePic",
          :arguments
          [{:node-type :argument,
            :argument-name "size",
            :value 50}]}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "withFragments"},
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set
      [{:node-type :field,
        :field-name "friends",
        :arguments
        [{:node-type :argument, :argument-name "first", :value 10}],
        :selection-set
        [{:node-type :fragment-spread, :name "friendFields"}]}
       {:node-type :field,
        :field-name "mutualFriends",
        :arguments
        [{:node-type :argument, :argument-name "first", :value 10}],
        :selection-set
        [{:node-type :fragment-spread, :name "friendFields"}]}]}]}],
  :fragment-definitions
  [{:name "friendFields",
    :type-condition {:type-name "User"},
    :selection-set
    [{:node-type :field, :field-name "id"}
     {:node-type :field, :field-name "name"}
     {:node-type :field,
      :field-name "profilePic",
      :arguments
      [{:node-type :argument, :argument-name "size", :value 50}]}],
    :node-type :fragment-definition,
    :section :fragment-definitions}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "withNestedFragments"},
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set
      [{:node-type :field,
        :field-name "friends",
        :arguments
        [{:node-type :argument, :argument-name "first", :value 10}],
        :selection-set
        [{:node-type :fragment-spread, :name "friendFields"}]}
       {:node-type :field,
        :field-name "mutualFriends",
        :arguments
        [{:node-type :argument, :argument-name "first", :value 10}],
        :selection-set
        [{:node-type :fragment-spread, :name "friendFields"}]}]}]}],
  :fragment-definitions
  [{:name "friendFields",
    :type-condition {:type-name "User"},
    :selection-set
    [{:node-type :field, :field-name "id"}
     {:node-type :field, :field-name "name"}
     {:node-type :fragment-spread, :name "standardProfilePic"}],
    :node-type :fragment-definition,
    :section :fragment-definitions}
   {:name "standardProfilePic",
    :type-condition {:type-name "User"},
    :selection-set
    [{:node-type :field,
      :field-name "profilePic",
      :arguments
      [{:node-type :argument, :argument-name "size", :value 50}]}],
    :node-type :fragment-definition,
    :section :fragment-definitions}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "FragmentTyping"},
    :selection-set
    [{:node-type :field,
      :field-name "profiles",
      :arguments
      [{:node-type :argument,
        :argument-name "handles",
        :value {:values ["zuck" "cocacola"]}}],
      :selection-set
      [{:node-type :field, :field-name "handle"}
       {:node-type :fragment-spread, :name "userFragment"}
       {:node-type :fragment-spread, :name "pageFragment"}]}]}],
  :fragment-definitions
  [{:name "userFragment",
    :type-condition {:type-name "User"},
    :selection-set
    [{:node-type :field,
      :field-name "friends",
      :selection-set [{:node-type :field, :field-name "count"}]}],
    :node-type :fragment-definition,
    :section :fragment-definitions}
   {:name "pageFragment",
    :type-condition {:type-name "Page"},
    :selection-set
    [{:node-type :field,
      :field-name "likers",
      :selection-set [{:node-type :field, :field-name "count"}]}],
    :node-type :fragment-definition,
    :section :fragment-definitions}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "inlineFragmentTyping"},
    :selection-set
    [{:node-type :field,
      :field-name "profiles",
      :arguments
      [{:node-type :argument,
        :argument-name "handles",
        :value {:values ["zuck" "cocacola"]}}],
      :selection-set
      [{:node-type :field, :field-name "handle"}
       {:node-type :inline-fragment,
        :type-condition {:type-name "User"},
        :selection-set
        [{:node-type :field,
          :field-name "friends",
          :selection-set [{:node-type :field, :field-name "count"}]}]}
       {:node-type :inline-fragment,
        :type-condition {:type-name "Page"},
        :selection-set
        [{:node-type :field,
          :field-name "likers",
          :selection-set
          [{:node-type :field, :field-name "count"}]}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "HeroForEpisode"},
    :variable-definitions
    [{:node-type :variable-definition,
      :variable-name "ep",
      :type-name "Episode",
      :required true}],
    :selection-set
    [{:node-type :field,
      :field-name "hero",
      :arguments
      [{:node-type :argument,
        :argument-name "episode",
        :variable-name "ep"}],
      :selection-set
      [{:node-type :field, :field-name "name"}
       {:node-type :inline-fragment,
        :type-condition {:type-name "Droid"},
        :selection-set
        [{:node-type :field, :field-name "primaryFunction"}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "inlineFragmentNoType"},
    :variable-definitions
    [{:node-type :variable-definition,
      :variable-name "expandedInfo",
      :type-name "Boolean"}],
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "handle", :value "zuck"}],
      :selection-set
      [{:node-type :field, :field-name "id"}
       {:node-type :field, :field-name "name"}
       {:node-type :inline-fragment,
        :directives
        [{:node-type :directive,
          :name "include",
          :arguments
          [{:node-type :argument,
            :argument-name "if",
            :variable-name "expandedInfo"}]}],
        :selection-set
        [{:node-type :field, :field-name "firstName"}
         {:node-type :field, :field-name "lastName"}
         {:node-type :field, :field-name "birthday"}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "getZuckProfile"},
    :variable-definitions
    [{:node-type :variable-definition,
      :variable-name "devicePicSize",
      :type-name "Int"}],
    :selection-set
    [{:node-type :field,
      :field-name "user",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 4}],
      :selection-set
      [{:node-type :field, :field-name "id"}
       {:node-type :field, :field-name "name"}
       {:node-type :field,
        :field-name "profilePic",
        :arguments
        [{:node-type :argument,
          :argument-name "size",
          :variable-name "devicePicSize"}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "hasConditionalFragment"},
    :variable-definitions
    [{:node-type :variable-definition,
      :variable-name "condition",
      :type-name "Boolean"}],
    :selection-set
    [{:node-type :fragment-spread,
      :name "maybeFragment",
      :directives
      [{:node-type :directive,
        :name "include",
        :arguments
        [{:node-type :argument,
          :argument-name "if",
          :variable-name "condition"}]}]}]}],
  :fragment-definitions
  [{:name "maybeFragment",
    :type-condition {:type-name "Query"},
    :selection-set
    [{:node-type :field,
      :field-name "me",
      :selection-set [{:node-type :field, :field-name "name"}]}],
    :node-type :fragment-definition,
    :section :fragment-definitions}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "hasConditionalFragment"},
    :variable-definitions
    [{:node-type :variable-definition,
      :variable-name "condition",
      :type-name "Boolean"}],
    :selection-set
    [{:node-type :fragment-spread, :name "maybeFragment"}]}],
  :fragment-definitions
  [{:name "maybeFragment",
    :type-condition {:type-name "Query"},
    :directives
    [{:node-type :directive,
      :name "include",
      :arguments
      [{:node-type :argument,
        :argument-name "if",
        :variable-name "condition"}]}],
    :selection-set
    [{:node-type :field,
      :field-name "me",
      :selection-set [{:node-type :field, :field-name "name"}]}],
    :node-type :fragment-definition,
    :section :fragment-definitions}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "myQuery"},
    :variable-definitions
    [{:node-type :variable-definition,
      :variable-name "someTest",
      :type-name "Boolean"}],
    :selection-set
    [{:node-type :field,
      :field-name "experimentalField",
      :directives
      [{:node-type :directive,
        :name "skip",
        :arguments
        [{:node-type :argument,
          :argument-name "if",
          :variable-name "someTest"}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "mutation", :name "setName"},
    :selection-set
    [{:node-type :field,
      :field-name "setName",
      :arguments
      [{:node-type :argument, :argument-name "name", :value "Zuck"}],
      :selection-set [{:node-type :field, :field-name "newName"}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :field-name "human",
      :arguments
      [{:node-type :argument, :argument-name "id", :value 1000}],
      :selection-set
      [{:node-type :field, :field-name "name"}
       {:node-type :field,
        :field-name "height",
        :arguments
        [{:node-type :argument, :argument-name "unit", :value "FOOT"}]}
       {:node-type :field,
        :field-name "weight",
        :arguments
        [{:node-type :argument,
          :argument-name "above",
          :value 100}]}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "WithDefaultValues"},
    :variable-definitions
    [{:node-type :variable-definition,
      :variable-name "a",
      :type-name "Int",
      :default-value 1}
     {:node-type :variable-definition,
      :variable-name "b",
      :type-name "String",
      :required true,
      :default-value "ok"}
     {:node-type :variable-definition,
      :variable-name "c",
      :type-name "ComplexInput",
      :default-value
      [:object-value
       [{:name "requiredField", :value true}
        {:name "intField", :value 3}]]}],
    :selection-set
    [{:node-type :field,
      :field-name "dog",
      :selection-set [{:node-type :field, :field-name "name"}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :name "empireHero",
      :field-name "hero",
      :arguments
      [{:node-type :argument,
        :argument-name "episode",
        :value "EMPIRE"}],
      :selection-set [{:node-type :field, :field-name "name"}]}
     {:node-type :field,
      :name "jediHero",
      :field-name "hero",
      :arguments
      [{:node-type :argument,
        :argument-name "episode",
        :value "JEDI"}],
      :selection-set [{:node-type :field, :field-name "name"}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query"},
    :selection-set
    [{:node-type :field,
      :name "leftComparison",
      :field-name "hero",
      :arguments
      [{:node-type :argument,
        :argument-name "episode",
        :value "EMPIRE"}],
      :selection-set
      [{:node-type :fragment-spread, :name "comparisonFields"}]}
     {:node-type :field,
      :name "rightComparison",
      :field-name "hero",
      :arguments
      [{:node-type :argument,
        :argument-name "episode",
        :value "JEDI"}],
      :selection-set
      [{:node-type :fragment-spread, :name "comparisonFields"}]}]}],
  :fragment-definitions
  [{:name "comparisonFields",
    :type-condition {:type-name "Character"},
    :selection-set
    [{:node-type :field, :field-name "name"}
     {:node-type :field, :field-name "appearsIn"}
     {:node-type :field,
      :field-name "friends",
      :selection-set [{:node-type :field, :field-name "name"}]}],
    :node-type :fragment-definition,
    :section :fragment-definitions}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "mutation"},
    :selection-set
    [{:node-type :field,
      :field-name "createHuman",
      :arguments
      [{:node-type :argument,
        :argument-name "name",
        :variable-name "testname"}
       {:node-type :argument,
        :argument-name "friends",
        :value {:values []}}],
      :selection-set [{:node-type :field, :field-name "id"}]}]}]}
 {:operation-definitions
  [{:section :operation-definitions,
    :node-type :operation-definition,
    :operation-type {:type "query", :name "Complex"},
    :selection-set
    [{:node-type :field,
      :field-name "callComplex",
      :arguments
      [{:node-type :argument,
        :argument-name "complexArgument",
        :value
        [:object-value
         [{:name "complexAttr1", :value 42}
          {:name "complexAttr2", :value 1}]]}],
      :selection-set [{:node-type :field, :field-name "xyzzy"}]}]}]}
)


